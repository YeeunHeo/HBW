# Generated by Django 2.1.2 on 2019-03-20 03:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('is_borrowed', models.BooleanField(default=False)),
                ('borrowed_time', models.DateTimeField(auto_now_add=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('reservation_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('대여가능', '대여가능'), ('대여중', '대여중'), ('대여불가', '대여불가'), ('대여신청중', '대여신청중')], default='대여가능', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Cable',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('is_borrowed', models.BooleanField(default=False)),
                ('borrowed_time', models.DateTimeField(auto_now_add=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('reservation_time', models.DateTimeField(auto_now_add=True)),
                ('cable_type', models.CharField(choices=[('C타입 케이블', 'C타입 케이블'), ('5핀 케이블', '5핀 케이블'), ('8핀 케이블', '8핀 케이블')], default='5핀 케이블', max_length=10)),
                ('status', models.CharField(choices=[('대여가능', '대여가능'), ('대여중', '대여중'), ('대여불가', '대여불가'), ('대여신청중', '대여신청중')], default='대여가능', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=1000)),
                ('updated_text', models.TextField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_anonymous', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=10)),
                ('userid', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Lan',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('is_borrowed', models.BooleanField(default=False)),
                ('borrowed_time', models.DateTimeField(auto_now_add=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('reservation_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('대여가능', '대여가능'), ('대여중', '대여중'), ('대여불가', '대여불가'), ('대여신청중', '대여신청중')], default='대여가능', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='now_time_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_time', models.PositiveSmallIntegerField(default=0)),
                ('is_manager', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('number', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('std_year', models.CharField(max_length=8)),
                ('is_paid', models.BooleanField(default=False)),
                ('A4_count', models.PositiveIntegerField(default=0, error_messages={'max_value': '하루 대여량은 50장을 넘길 수 없습니다.'}, validators=[django.core.validators.MaxValueValidator(50)])),
                ('today_A4', models.PositiveIntegerField(default=0, error_messages={'max_value': '하루 대여량은 50장을 넘길 수 없습니다.'}, validators=[django.core.validators.MaxValueValidator(50)])),
                ('month_A4', models.PositiveIntegerField(default=0, error_messages={'max_value': '한달 대여량은 500장을 넘길 수 없습니다.'}, validators=[django.core.validators.MaxValueValidator(500)])),
                ('is_attend', models.BooleanField(default=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudyTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('is_borrowed', models.BooleanField(default=False)),
                ('start_time', models.CharField(blank=True, max_length=100, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('lender', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='st', to='login.Student')),
            ],
        ),
        migrations.CreateModel(
            name='time_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_time', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='timetest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timea', models.DateTimeField(auto_now_add=True)),
                ('timeb', models.DateTimeField(auto_now_add=True)),
                ('diff', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Unbrella',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True)),
                ('is_borrowed', models.BooleanField(default=False)),
                ('borrowed_time', models.DateTimeField(auto_now_add=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('reservation_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('대여가능', '대여가능'), ('대여중', '대여중'), ('대여불가', '대여불가'), ('대여신청중', '대여신청중')], default='대여가능', max_length=5)),
                ('borrowed_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='un', to='login.Student')),
            ],
        ),
        migrations.AddField(
            model_name='lan',
            name='borrowed_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='la', to='login.Student'),
        ),
        migrations.AddField(
            model_name='cable',
            name='borrowed_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ca', to='login.Student'),
        ),
        migrations.AddField(
            model_name='battery',
            name='borrowed_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ba', to='login.Student'),
        ),
    ]
